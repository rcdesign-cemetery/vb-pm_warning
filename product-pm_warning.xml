<?xml version="1.0" encoding="ISO-8859-1"?>

<product productid="pm_warning" active="1">
	<title>Private Message Warning</title>
	<description>Shows custom warning, when someone try to send PM</description>
	<version>0.9</version>
	<url><![CDATA[http://www.vbulletin.org/forum/misc.php?do=producthelp&pid=pm_warning]]></url>
	<versioncheckurl><![CDATA[http://www.vbulletin.org/forum/misc.php?do=productcheck&pid=pm_warning]]></versioncheckurl>
	<apm_releasedate>0</apm_releasedate>
	<apm_author />
	<apm_relatedurl />
	<apm_extrainfo />
	<apm_extraedit />
	<dependencies>
	</dependencies>
	<codes>
		<code version="0.1">
			<installcode><![CDATA[
                                $db->query(
                                "CREATE TABLE IF NOT EXISTS `" . TABLE_PREFIX . "pmwarning` (
                                    `userid` int(10) unsigned NOT NULL,
                                    `warning` mediumtext,
                                    PRIMARY KEY  (`userid`)
                                ) ENGINE=MyISAM" );
                                $db->query(
                                "CREATE TABLE IF NOT EXISTS `" . TABLE_PREFIX . "pmwarninglasttime` (
                                    `userid` INT( 10 ) NOT NULL,
                                    `recipientid` INT( 10 ) NOT NULL,
                                    `lasttime` INT( 10 ) NOT NULL,
                                    PRIMARY KEY ( `userid` , `recipientid` ),
                                    KEY `recipientid` (`recipientid`)
                                ) ENGINE = MYISAM" );
                                
                        ]]></installcode>
			<uninstallcode><![CDATA[
                            $db->query("DROP TABLE IF EXISTS `" . TABLE_PREFIX . "pmwarning`" );
                            $db->query("DROP TABLE IF EXISTS `" . TABLE_PREFIX . "pmwarninglasttime`" );

                        ]]></uninstallcode>
		</code>
	</codes>
	<templates>
		<template name="pm_warning_edit" templatetype="template" date="1274448615" username="sawoy" version="0.7"><![CDATA[<form action="private.php?do=insertpmwarning&amp;pmid={vb:raw pm.pmid}" method="post" name="vbform" <vb:if condition="!is_browser('webtv')">onsubmit="return vB_Editor['{vb:raw editorid}'].prepare_submit(this.title.value, 0)"</vb:if> >
        <h2 class="blockhead">{vb:phrase pm_warning_status}</h2>
        <div class="blockbody formcontrols">
                <div class="section">
                        <div class="blockrow restore">
                                {vb:raw warning.message}
                        </div>
                </div>
                <h3 class="blocksubhead">{vb:phrase pm_warning_post_new}</h3>
                <div class="section">
                        <div class="blockrow">
                                {vb:raw messagearea}
                        </div>
                </div>
        </div>
        <div class="blockfoot actionbuttons">
                <div class="group">
                        <input type="hidden" name="s" value="{vb:raw session.sessionhash}" />
                        <input type="hidden" name="securitytoken" value="{vb:raw bbuserinfo.securitytoken}" />
                        <input type="hidden" name="do" value="insertpmwarning" />
                        <input type="submit" class="button" name="sbutton" id="{vb:raw editorid}_save" value="{vb:phrase save}" accesskey="s" tabindex="1" />
                        <input type="button" class="button" value="{vb:phrase delete}" onclick="window.location.href='private.php?do=deletepmwarning&amp;pmid={vb:raw pm.pmid}'" <vb:if condition="$show['pm_warning_delete_button_disable']">disabled="disabled"</vb:if> />
                </div>
        </div>
</form>]]></template>
		<template name="pm_warning_error" templatetype="template" date="1274681432" username="sawoy" version="0.7"><![CDATA[<li class="restore">{vb:raw errormessage}</li>]]></template>
	</templates>
	<stylevardfns>
	</stylevardfns>
	<stylevars>
	</stylevars>
	<plugins>
		<plugin active="1" executionorder="5">
			<title>Cache template</title>
			<hookname>cache_templates</hookname>
			<phpcode><![CDATA[if (THIS_SCRIPT == 'private')
                        {
                            if ('pmwarning' == $_REQUEST['do'])
                            {
                                $cache = array_merge($cache, array(
                                        'pm_warning_edit', 'pm_warning_error',
                                        'editor_toolbar_on',
                                        'editor_clientscript',
                                        'editor_css',
                                        'editor_jsoptions_font',
                                        'editor_jsoptions_size',
                                        'newpost_preview',
                                        ));
                            }
                        }]]></phpcode>
		</plugin>
		<plugin active="1" executionorder="5">
			<title>Cleanup pmwarninglasttime</title>
			<hookname>cron_script_cleanup_daily</hookname>
			<phpcode><![CDATA[$db =& $vbulletin->db;
$dateline = TIMENOW - (24 * 60 * 60 * $vbulletin->options['pm_unnotified_period']);
$sql = 'DELETE FROM
            `' . TABLE_PREFIX . 'pmwarninglasttime`
            WHERE
                `lasttime` < '. $dateline .
                ' OR `lasttime` > ' . TIMENOW;

$db->query_write($sql);]]></phpcode>
		</plugin>
		<plugin active="1" executionorder="5">
			<title>Add link to usercp menu</title>
			<hookname>parse_templates</hookname>
			<phpcode><![CDATA[if (array_key_exists('USERCP_SHELL',$vbulletin->templatecache))
{
    $need_warning_link = false;
    $warning_group_list = unserialize($vbulletin->options['pm_warning_groups']);
    if (!empty($warning_group_list) AND is_member_of($vbulletin->userinfo, $warning_group_list))
    {
        $need_warning_link = true;
    }
    if (!empty($vbulletin->options['pm_warning_user_ids']))
    {
        $warning_user_ids = array_map('intval', (explode(',', $vbulletin->options['pm_warning_user_ids'])));
        if (in_array($vbulletin->userinfo['userid'], $warning_user_ids))
        {
            $need_warning_link = true;
        }
    }
    
    if ($need_warning_link)
    {
        $before_patch = $vbulletin->templatecache['USERCP_SHELL'];
        $pmwarning_class = ($_REQUEST['do'] == 'pmwarning') ? 'active' : 'inactive';
        $pattern = '<li class="\' . $navclass[\'pm_editfolders\'] . \'"><a href="private.php?\' . $session[\'sessionurl\'] . \'do=editfolders">\' . vB_Template_Runtime::parsePhrase("edit_folders") . \'</a></li>';
        $replace = $pattern . '<li class="'.$pmwarning_class.'"><a href="private.php?\' . $session[\'sessionurl\'] . \'do=pmwarning">\' . vB_Template_Runtime::parsePhrase("usercp_menu_pm_warning_edit") . \'</a></li>';
        $vbulletin->templatecache['USERCP_SHELL'] = str_replace( $pattern, $replace, $vbulletin->templatecache['USERCP_SHELL'] );
        if ($before_patch == $vbulletin->templatecache['USERCP_SHELL'])
        {
            $err_message = sprintf("Product '%s', error in hook %s : can't modify template '%s'",
                                'Private Message Warning',
                                'parse_templates',
                                'USERCP_SHELL');
            error_log($err_message); // Send to PHP error log
            if ($vbulletin->debug)
            {
                trigger_error($err_message, E_USER_WARNING); // Display on page
                require_once(DIR . '/includes/functions_log_error.php');
                log_vbulletin_error($err_message, 'php'); // Send to vB error log
            }
            unset($err_message, $before_patch);
        }
    }
}]]></phpcode>
		</plugin>
		<plugin active="1" executionorder="5">
			<title>Get warning message</title>
			<hookname>private_insertpm_process</hookname>
			<phpcode><![CDATA[// Make shure to do nothing during registration
if (THIS_SCRIPT == 'private')
{

$is_work_with_pmwarning =false;

$vbulletin->input->clean_gpc('p', 'pm_warning_confirmed');
if ('' == $vbulletin->GPC['preview'] && 1 == count($pmdm->info['recipients']))
{
    $is_user_in_ignored_group = false;
    $warning_ignored_group_list = unserialize($vbulletin->options['pm_warning_ignore_groups']);
    if (!empty($warning_ignored_group_list))
    {
        $is_user_in_ignored_group = is_member_of($vbulletin->userinfo, $warning_ignored_group_list);
    }

    if (!$is_user_in_ignored_group)
    {
        $recipient_info = current($pmdm->info['recipients']);
        $user_id = $vbulletin->userinfo['userid'];
        $recipient_id = $recipient_info['userid'];
        if (is_null($vbulletin->GPC['pm_warning_confirmed']))
        {
            $is_warning_need = false;
            $warning_group_list = unserialize($vbulletin->options['pm_warning_groups']);
            if (!empty($warning_group_list) AND is_member_of($recipient_info, $warning_group_list))
            {
                $is_warning_need = true;
            }
            if (!empty($vbulletin->options['pm_warning_user_ids']))
            {
                $warning_user_ids = array_map('intval', (explode(',', $vbulletin->options['pm_warning_user_ids'])));
                if (in_array($recipient_id, $warning_user_ids))
                {
                    $is_warning_need = true;
                }
            }
            /**
             * if ($is_warning_need && (3 !== fetch_user_relationship($recipient_id, $user_id)))
             * this expanded variant of condition, can be used in future
             */
            if ($is_warning_need)
            {
                $period = (int)$vbulletin->options['pm_unnotified_period'];
                if (0 !== $period)
                {
                    $dateline = TIMENOW - (24 * 60 * 60 * $period);
                    $sql = 'SELECT `lasttime`
                                        FROM `' . TABLE_PREFIX . 'pmwarninglasttime`
                                        WHERE
                                            `userid` = ' . $user_id .
                        ' AND `recipientid` = ' . $recipient_id .
                        ' AND `lasttime` > ' . $dateline;
                    $row = $db->query_first_slave($sql);
                    if (!empty($row['lasttime']))
                    {
                        $is_warning_need = false;
                    }
                }
            } //if ($is_warning_need)
            if ($is_warning_need)
            {
                //Get warning messge by user
                $sql = 'SELECT warning FROM `' . TABLE_PREFIX . 'pmwarning` WHERE userid = ' . $recipient_id;
                $row = $db->query_first_slave($sql);
                $warning_msg = (!empty($row) ? $row['warning'] : null);
                if (!is_null($warning_msg))
                {
                    $vbulletin->GPC['preview'] = true;
                }
                $is_work_with_pmwarning = true;
            }
        } //if (is_null($vbulletin->GPC['pm_warning_confirmed']))
        else
        {
            //Write warning into to db
            $sql = 'REPLACE INTO
                        `' . TABLE_PREFIX . 'pmwarninglasttime`
                    SET
                        `userid` = "' . $user_id . '",
                        `recipientid` = "' . $recipient_id . '",
                        `lasttime` = ' . TIMENOW;
            $db->query_write($sql);
        }
    }
}

}]]></phpcode>
		</plugin>
		<plugin active="1" executionorder="5">
			<title>Show warning, if it need</title>
			<hookname>private_newpm_start</hookname>
			<phpcode><![CDATA[if (defined('PMPREVIEW') && isset($warning_msg))
{
	$disablesmilies =& $vbulletin->GPC['disablesmilies'];
	require_once(DIR . '/includes/class_bbcode.php');
	$bbcode_parser =& new vB_BbCodeParser($vbulletin, fetch_tag_list());
	$recipient_info = current($pmdm->info['recipients']);
	$bbcode_parser->set_parse_userinfo($recipient_info);

	$previewmessage = $bbcode_parser->parse($warning_msg, $foruminfo['forumid'], $disablesmilies);

	$show['messageicon'] = false;

	$preview = '';

	if ($previewmessage != '')
	{
                $show['errors'] = true;

                $vbphrase['errors_occured_when_submitted'] = $vbphrase['pm_warning_from_recipient'];
                $vbphrase['errors'] = $vbphrase['pm_warning_title_warning'];

                $templater = vB_Template::create('pm_warning_error');
                $templater->register('errormessage', $previewmessage);
                $previewmessage = $templater->render();

                $templater = vB_Template::create('newpost_preview');
                $templater->register('errorlist', $previewmessage);
                $preview = $templater->render();
	}

	$preview.= construct_hidden_var_field_value('pm_warning_confirmed', 1);
}]]></phpcode>
		</plugin>
		<plugin active="1" executionorder="5">
			<title>Insert handlers for warning add/edit/delete</title>
			<hookname>private_start</hookname>
			<phpcode><![CDATA[if (($_REQUEST['do'] == 'insertpmwarning') OR $_REQUEST['do'] == 'deletepmwarning' OR $_REQUEST['do'] == 'pmwarning')
{
    $can_warning_manage = false;
    $warning_group_list = unserialize($vbulletin->options['pm_warning_groups']);
    if (!empty($warning_group_list) AND is_member_of($vbulletin->userinfo, $warning_group_list))
    {
        $can_warning_manage = true;
    }
    if (!empty($vbulletin->options['pm_warning_user_ids']))
    {
        $warning_user_ids = array_map('intval', (explode(',', $vbulletin->options['pm_warning_user_ids'])));
        if (in_array($vbulletin->userinfo['userid'], $warning_user_ids))
        {
            $can_warning_manage = true;
        }
    }
    
    if (!$can_warning_manage)
    {
        print_no_permission();
    }
}
if ($_REQUEST['do'] == 'insertpmwarning')
{
    $vbulletin->input->clean_array_gpc('p', array(
		'wysiwyg'        => TYPE_BOOL,
		'message'        => TYPE_STR,
	));
    if ($vbulletin->GPC['wysiwyg'])
    {
        require_once(DIR . '/includes/functions_wysiwyg.php');
	$vbulletin->GPC['message'] = convert_wysiwyg_html_to_bbcode($vbulletin->GPC['message'], $vbulletin->options['privallowhtml']);
    }
    $warning_msg = $vbulletin->GPC['message'];

    if ($warning_msg !== '')
    {
        $user_id = $vbulletin->userinfo['userid'];

        //Write warning to db
        $sql = 'REPLACE INTO `' . TABLE_PREFIX . 'pmwarning`
                    SET
                    `userid` = "' . $user_id . '",
                    `warning` = "' . $db->escape_string($warning_msg) . '"';
        $db->query_write($sql);
        //Delete record about last warning read time
        $sql = 'DELETE FROM`' . TABLE_PREFIX . 'pmwarninglasttime` WHERE `recipientid` = '. $user_id;
        $db->query_write($sql);
        $vbulletin->url = 'private.php?' . $vbulletin->session->vars['sessionurl'] . 'do=pmwarning';
        eval(print_standard_redirect('pm_setting_saved'));
    }
    else
    {
        $_REQUEST['do'] = 'deletepmwarning';
    }
}

if ($_REQUEST['do'] == 'deletepmwarning')
{
    $user_id = $vbulletin->userinfo['userid'];
    //Delete warning from db
    $sql = 'DELETE FROM `' . TABLE_PREFIX . 'pmwarning` WHERE `userid` = '. $user_id;
    $db->query_write($sql);
    //Delete record about last warning read time
    $sql = 'DELETE FROM`' . TABLE_PREFIX . 'pmwarninglasttime` WHERE `recipientid` = '. $user_id;
    $db->query_write($sql);

    $warning_msg = '';
    $vbulletin->url = 'private.php?' . $vbulletin->session->vars['sessionurl'] . 'do=pmwarning';
    eval(print_standard_redirect('pm_setting_saved'));
}

if ($_REQUEST['do'] == 'pmwarning')
{
    $vbulletin->input->clean_array_gpc('p', array(
		'wysiwyg'        => TYPE_BOOL,
        'disablesmilies' => TYPE_BOOL,
		'message'        => TYPE_STR,
	));

    $warning = array();
    $user_id = $vbulletin->userinfo['userid'];
    //Get warning message by user
    $sql = 'SELECT warning FROM ' . TABLE_PREFIX . 'pmwarning WHERE userid = ' . $user_id;
    $row = $db->query_first_slave($sql);
    $warning['message'] = (!empty($row) ? $row['warning'] : null);

    require_once(DIR . '/includes/functions_editor.php');
    // set warning message box width to usercp size
    $stylevar['messagewidth'] = $stylevar['messagewidth_usercp'];
    $editorid = construct_edit_toolbar($warning['message'], 0, 'nonforum', false);

    if ($warning['message'] == '')
    {
        $warning['message'] = $vbphrase['pm_warning_empty'];
        $show['pm_warning_delete_button_disable'] = true;
    } else {

        $disablesmilies =& $vbulletin->GPC['disablesmilies'];

        require_once(DIR . '/includes/class_bbcode.php');

        $bbcode_parser =& new vB_BbCodeParser($vbulletin, fetch_tag_list());
        $warning['message'] = $bbcode_parser->parse($warning['message'], $foruminfo['forumid'], $disablesmilies);
    }
    require_once(DIR . '/includes/functions_newpost.php');
    // next 3 line remove  notes icon
    // @todo find a better solution
    $warning['iconpath'] = '';
    $show['messageicon'] = false;
    $vbulletin->options['showdeficon'] = '';

    $page_templater = vB_Template::create('pm_warning_edit');
    $page_templater->register('pm', $pm);
    $page_templater->register('editorid', $editorid);
    $page_templater->register('warning', $warning);
    $page_templater->register('messagearea', $messagearea);
}]]></phpcode>
		</plugin>
	</plugins>
	<phrases>
		<phrasetype name="GLOBAL" fieldname="global">
			<phrase name="usercp_menu_pm_warning_edit" date="1254455588" username="Vitaly" version=""><![CDATA[Auto warning for PM]]></phrase>
		</phrasetype>
		<phrasetype name="Private Messaging" fieldname="pm">
			<phrase name="pm_setting_saved" date="1254454656" username="Vitaly" version=""><![CDATA[Setting was saved.]]></phrase>
			<phrase name="pm_warning_empty" date="1269515773" username="varnak" version="0.6"><![CDATA[No active warning.]]></phrase>
			<phrase name="pm_warning_from_recipient" date="1254455392" username="Vitaly" version=""><![CDATA[If still wish to send message, press button once again]]></phrase>
			<phrase name="pm_warning_post_new" date="1254454988" username="Vitaly" version=""><![CDATA[Edit warning text]]></phrase>
			<phrase name="pm_warning_status" date="1254455124" username="Vitaly" version=""><![CDATA[This text will be shown to everyone, who try to send you private message]]></phrase>
			<phrase name="pm_warning_title_warning" date="1274448693" username="sawoy" version=""><![CDATA[Warning !]]></phrase>
		</phrasetype>
		<phrasetype name="vBulletin Settings" fieldname="vbsettings">
			<phrase name="setting_pm_unnotified_period_desc" date="1269512513" username="Vitaly" version="0.6"><![CDATA[Hide warning for XX days for each person, when shown. If empty - always show.]]></phrase>
			<phrase name="setting_pm_unnotified_period_title" date="1269512513" username="Vitaly" version="0.6"><![CDATA[Warning Thresold]]></phrase>
			<phrase name="setting_pm_warning_groups_desc" date="1269512251" username="Vitaly" version=""><![CDATA[Select groups, that can use PM warning.]]></phrase>
			<phrase name="setting_pm_warning_groups_title" date="1254454162" username="Vitaly" version=""><![CDATA[Enabled Groups]]></phrase>
			<phrase name="setting_pm_warning_ignore_groups_desc" date="1269512671" username="Vitaly" version=""><![CDATA[Select groups, which always ignore warning (those will never see warning even if set).]]></phrase>
			<phrase name="setting_pm_warning_ignore_groups_title" date="1254485913" username="Vitaly" version=""><![CDATA[Ignored Groups]]></phrase>
			<phrase name="setting_pm_warning_user_ids_desc" date="1269512463" username="Vitaly" version=""><![CDATA[Set user IDs, that can use PM warning.<br />
<br />
Note: User IDs must be separated by ','. For example: 1,3,10]]></phrase>
			<phrase name="setting_pm_warning_user_ids_title" date="1269438334" username="Vitaly" version=""><![CDATA[Enabled users]]></phrase>
			<phrase name="settinggroup_pm_warning" date="1254453937" username="e.shkuropat" version=""><![CDATA[Private Message Warning]]></phrase>
		</phrasetype>
	</phrases>
	<options>
		<settinggroup name="pm_warning" displayorder="65535">
			<setting varname="pm_warning_groups" displayorder="20">
				<datatype>free</datatype>
				<optioncode>usergroup:5</optioncode>
				<defaultvalue>a:3:{i:0;i:5;i:1;i:6;i:2;i:7;}</defaultvalue>
			</setting>
			<setting varname="pm_warning_ignore_groups" displayorder="20">
				<datatype>free</datatype>
				<optioncode>usergroup:5</optioncode>
			</setting>
			<setting varname="pm_warning_user_ids" displayorder="40">
				<datatype>free</datatype>
			</setting>
			<setting varname="pm_unnotified_period" displayorder="50">
				<datatype>free</datatype>
				<defaultvalue>7</defaultvalue>
			</setting>
		</settinggroup>
	</options>
	<helptopics>
	</helptopics>
	<cronentries>
	</cronentries>
	<faqentries>
	</faqentries>
	<templateedits>
	</templateedits>
</product>
